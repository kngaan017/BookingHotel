@model QuanLyDatPhongKhachSan.Models.user

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="container col-lg-10">
    <h4><b>Chỉnh sửa tài khoản</b></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userID)

    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Tên người dùng", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @{
                    bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                }
                @Html.CheckBoxFor(model => hide)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Mật khẩu", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Họ tên", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Số điện thoại", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Email", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.datebegin, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12 text-right">
                <input type="submit" value="Save" class="btn btn-primary text-right" />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
}
