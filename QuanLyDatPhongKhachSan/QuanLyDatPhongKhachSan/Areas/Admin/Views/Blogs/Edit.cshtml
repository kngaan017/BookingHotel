@model QuanLyDatPhongKhachSan.Models.blog

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Edit", "blogs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="container col-lg-10">
    <h4><b>Chỉnh sửa blog</b></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.blogID)

    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Tag", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.tag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tag, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">

            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Ngày xuất bản", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.publishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publishDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Ảnh", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-10">
                @{
                    string imgName = string.IsNullOrEmpty(Model.img) ? "No file chosen" : Model.img;
                }
                <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" onchange="displaySelectedImage(event)" />
                <img id="imgPreview" src="~/Areas/Admin/Content/upload/img/blog/@Model.img" width="50px" height="50px" />
            </div>
        </div>
    </div>
    
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Nội dung blog", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-10">
                <textarea id="blogContent" name="blogContent" class="form-control" required="required"></textarea>
                @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2 text-right align-self-center">
                <strong>@Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label" })</strong>
            </div>
            <div class="col-md-10">
                @{
                    bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                }
                @Html.CheckBoxFor(model => hide)
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-12 text-right">
                <input type="submit" value="Save" class="btn btn-primary text-right" />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
}


@section _Footer
{

    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("blogContent");
        var editor = CKEDITOR.replace("blogContent", { height: '200px' });
        customConfig: '/Areas/admin/Content/ckeditor/config.js';
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
        document.addEventListener("DOMContentLoaded", function () {
            var input = document.getElementById("img");
            var label = document.getElementById("imgLabel");
            if (input.files && input.files.length > 0) {
                label.textContent = input.files[0].name;
            }
        });

        function displaySelectedImage(event) {
            var input = event.target;
            var label = document.getElementById("imgLabel");
            var imgPreview = document.getElementById("imgPreview");

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    imgPreview.src = e.target.result;
                    label.textContent = input.files[0].name;
                };

                reader.readAsDataURL(input.files[0]);
            } else {
                imgPreview.src = "";
                label.textContent = "No file chosen";
            }
        }
        function displaySelectedFileName() {
            var input = document.getElementById('img');
            var selectedFileName = document.getElementById('selectedFileName');

            if (input.files.length > 0) {
                selectedFileName.textContent = input.files[0].name;
            } else {
                selectedFileName.textContent = "";
            }
        }
    </script>
}

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="container col-lg-10">
        <h4>Blog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.blogID)

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.tag, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tag, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.publishDate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.publishDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tag, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.hide, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.hide, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    @Html.LabelFor(model => model.datebegin, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12 text-right">
                    <input type="submit" value="Save" class="btn btn-primary text-right" />
                </div>
            </div>
        </div>
    </div>
    }

    <div class="container col-lg-10 mb-3">
        <div class="text-right">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>*@


