@model QuanLyDatPhongKhachSan.Models.menu

@{

    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "memu", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container col-lg-10">
        <h4><b>Chỉnh sửa menu</b></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    <strong>@Html.Label("Name", htmlAttributes: new { @class = "control-label" })</strong>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 text-right align-self-center">
                    <strong>@Html.Label("Link", htmlAttributes: new { @class = "control-label" })</strong>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    <strong>@Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label" })</strong>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 text-right align-self-center">
                    <strong>@Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label" })</strong>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-2 text-right align-self-center">
                    <strong>@Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label" })</strong>
                </div>
                <div class="col-md-4">
                    @{
                        bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                    }
                    @Html.CheckBoxFor(model => hide)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12 text-right">
                    <input type="submit" value="Save" class="btn btn-primary text-right" />
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        // Gọi phương thức datepicker() sau khi tài liệu đã sẵn sàng
        $('#startDate').datepicker({
            dateFormat: 'mm/dd/yy', // Định dạng ngày tháng
            minDate: 0 // Không cho phép chọn ngày trước ngày hiện tại
        });

        $('#endDate').datepicker({
            dateFormat: 'mm/dd/yy', // Định dạng ngày tháng
            minDate: 0 // Không cho phép chọn ngày trước ngày hiện tại
        });
    });

</script>
